@inproceedings{DBLP:conf/chi/LernerFG15,
  author    = {Sorin Lerner and
               Stephen R. Foster and
               William G. Griswold},
  title     = {Polymorphic Blocks: Formalism-Inspired {UI} for Structured Connectors},
  booktitle = {Proceedings of the 33rd Annual {ACM} Conference on Human Factors in
               Computing Systems, {CHI} 2015, Seoul, Republic of Korea, April 18-23,
               2015},
  pages     = {3063--3072},
  year      = {2015},
  crossref  = {DBLP:conf/chi/2015},
  url       = {http://doi.acm.org/10.1145/2702123.2702302},
  doi       = {10.1145/2702123.2702302},
  timestamp = {Sun, 19 Apr 2015 16:24:23 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/chi/LernerFG15},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{burckhardt2013s,
  title={It's alive! continuous feedback in UI programming},
  author={Burckhardt, Sebastian and Fahndrich, Manuel and de Halleux, Peli and McDirmid, Sean and Moskal, Michal and Tillmann, Nikolai and Kato, Jun},
  booktitle={ACM SIGPLAN Notices},
  volume={48},
  number={6},
  pages={95--104},
  year={2013},
  organization={ACM}
}

@article{DBLP:journals/entcs/Sands97,
  author    = {Dave Sands},
  title     = {Computing with Contexts: {A} simple approach},
  journal   = {Electr. Notes Theor. Comput. Sci.},
  volume    = {10},
  pages     = {134--149},
  year      = {1997},
  url       = {http://dx.doi.org/10.1016/S1571-0661(05)80694-2},
  doi       = {10.1016/S1571-0661(05)80694-2},
  timestamp = {Mon, 20 Jun 2011 17:31:54 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/entcs/Sands97},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{DBLP:conf/icfp/LeeF96,
  author    = {Shinn{-}Der Lee and
               Daniel P. Friedman},
  title     = {Enriching the Lambda Calculus with Contexts: Toward a Theory of Incremental
               Program Construction},
  booktitle = {Proceedings of the 1996 {ACM} {SIGPLAN} International Conference on
               Functional Programming {(ICFP} '96), Philadelphia, Pennsylvania, May
               24-26, 1996.},
  pages     = {239--250},
  year      = {1996},
  crossref  = {DBLP:conf/icfp/1996},
  url       = {http://doi.acm.org/10.1145/232627.232652},
  doi       = {10.1145/232627.232652},
  timestamp = {Tue, 11 Jun 2013 13:54:16 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/icfp/LeeF96},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}
@article{mcbride2000dependently,
  title={Dependently typed functional programs and their proofs},
  author={McBride, Conor},
  year={2000},
  publisher={University of Edinburgh. College of Science and Engineering. School of Informatics.}
}

@inproceedings{DBLP:conf/flops/Pientka10,
  author    = {Brigitte Pientka},
  title     = {Beluga: Programming with Dependent Types, Contextual Data, and Contexts},
  booktitle = {Functional and Logic Programming, 10th International Symposium, {FLOPS}
               2010, Sendai, Japan, April 19-21, 2010. Proceedings},
  pages     = {1--12},
  year      = {2010},
  crossref  = {DBLP:conf/flops/2010},
  url       = {http://dx.doi.org/10.1007/978-3-642-12251-4_1},
  doi       = {10.1007/978-3-642-12251-4_1},
  timestamp = {Fri, 19 Jul 2013 09:37:20 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/flops/Pientka10},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@article{DBLP:journals/tocl/NanevskiPP08,
  author    = {Aleksandar Nanevski and
               Frank Pfenning and
               Brigitte Pientka},
  title     = {Contextual modal type theory},
  journal   = {{ACM} Trans. Comput. Log.},
  volume    = {9},
  number    = {3},
  year      = {2008},
  url       = {http://doi.acm.org/10.1145/1352582.1352591},
  doi       = {10.1145/1352582.1352591},
  timestamp = {Tue, 10 Jun 2008 13:15:19 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/tocl/NanevskiPP08},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}
@inproceedings{DBLP:conf/pldi/OseraZ15,
  author    = {Peter{-}Michael Osera and
               Steve Zdancewic},
  title     = {Type-and-example-directed program synthesis},
  booktitle = {Proceedings of the 36th {ACM} {SIGPLAN} Conference on Programming
               Language Design and Implementation, Portland, OR, USA, June 15-17,
               2015},
  pages     = {619--630},
  year      = {2015},
  crossref  = {DBLP:conf/pldi/2015},
  url       = {http://doi.acm.org/10.1145/2737924.2738007},
  doi       = {10.1145/2737924.2738007},
  timestamp = {Fri, 05 Jun 2015 07:31:54 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/pldi/OseraZ15},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}
@article{brady2013idris,
  title={Idris, a general-purpose dependently typed programming language: Design and implementation},
  author={Brady, Edwin},
  journal={Journal of Functional Programming},
  volume={23},
  number={05},
  pages={552--593},
  year={2013},
  publisher={Cambridge Univ Press}
}

@inproceedings{DBLP:conf/popl/CiminiS16,
  author    = {Matteo Cimini and
               Jeremy G. Siek},
  title     = {The gradualizer: a methodology and algorithm for generating gradual
               type systems},
  booktitle = {Proceedings of the 43rd Annual {ACM} {SIGPLAN-SIGACT} Symposium on
               Principles of Programming Languages, {POPL} 2016, St. Petersburg,
               FL, USA, January 20 - 22, 2016},
  pages     = {443--455},
  year      = {2016},
  crossref  = {DBLP:conf/popl/2016},
  url       = {http://doi.acm.org/10.1145/2837614.2837632},
  doi       = {10.1145/2837614.2837632},
  timestamp = {Wed, 09 Mar 2016 08:11:59 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/popl/CiminiS16},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{damas1982principal,
  title={Principal type-schemes for functional programs},
  author={Damas, Luis and Milner, Robin},
  booktitle={Proceedings of the 9th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
  pages={207--212},
  year={1982},
  organization={ACM}
}

@inproceedings{DBLP:conf/popl/GarciaC15,
  author    = {Ronald Garcia and
               Matteo Cimini},
  title     = {Principal Type Schemes for Gradual Programs},
  booktitle = {Proceedings of the 42nd Annual {ACM} {SIGPLAN-SIGACT} Symposium on
               Principles of Programming Languages, {POPL} 2015, Mumbai, India, January
               15-17, 2015},
  pages     = {303--315},
  year      = {2015},
  crossref  = {DBLP:conf/popl/2015},
  url       = {http://doi.acm.org/10.1145/2676726.2676992},
  doi       = {10.1145/2676726.2676992},
  timestamp = {Sat, 20 Dec 2014 16:58:56 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/popl/GarciaC15},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{DBLP:conf/popl/RastogiCH12,
  author    = {Aseem Rastogi and
               Avik Chaudhuri and
               Basil Hosmer},
  title     = {The ins and outs of gradual type inference},
  booktitle = {Proceedings of the 39th {ACM} {SIGPLAN-SIGACT} Symposium on Principles
               of Programming Languages, {POPL} 2012, Philadelphia, Pennsylvania,
               USA, January 22-28, 2012},
  pages     = {481--494},
  year      = {2012},
  crossref  = {DBLP:conf/popl/2012},
  url       = {http://doi.acm.org/10.1145/2103656.2103714},
  doi       = {10.1145/2103656.2103714},
  timestamp = {Tue, 22 May 2012 15:24:56 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/popl/RastogiCH12},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{voelter2011language,
  title={Language and IDE Modularization and Composition with MPS},
  author={Voelter, Markus},
  booktitle={International Summer School on Generative and Transformational Techniques in Software Engineering},
  pages={383--430},
  year={2011},
  organization={Springer}
}

@inproceedings{DBLP:conf/sle/VolterSBK14,
  author    = {Markus V{\"{o}}lter and
               Janet Siegmund and
               Thorsten Berger and
               Bernd Kolb},
  title     = {Towards User-Friendly Projectional Editors},
  booktitle = {Software Language Engineering - 7th International Conference, {SLE}
               2014, V{\"{a}}ster{\aa}s, Sweden, September 15-16, 2014. Proceedings},
  pages     = {41--61},
  year      = {2014},
  crossref  = {DBLP:conf/sle/2014},
  url       = {http://dx.doi.org/10.1007/978-3-319-11245-9_3},
  doi       = {10.1007/978-3-319-11245-9_3},
  timestamp = {Tue, 09 Sep 2014 10:57:11 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/sle/VolterSBK14},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@article{DBLP:journals/software/VoelterWK15,
  author    = {Markus Voelter and
               Jos Warmer and
               Bernd Kolb},
  title     = {Projecting a Modular Future},
  journal   = {{IEEE} Software},
  volume    = {32},
  number    = {5},
  pages     = {46--52},
  year      = {2015},
  url       = {http://dx.doi.org/10.1109/MS.2014.103},
  doi       = {10.1109/MS.2014.103},
  timestamp = {Tue, 12 Jan 2016 12:01:57 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/software/VoelterWK15},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{DBLP:conf/icfp/Elliott07,
  author    = {Conal Elliott},
  title     = {Tangible functional programming},
  booktitle = {Proceedings of the 12th {ACM} {SIGPLAN} International Conference on
               Functional Programming, {ICFP} 2007, Freiburg, Germany, October 1-3,
               2007},
  pages     = {59--70},
  year      = {2007},
  crossref  = {DBLP:conf/icfp/2007},
  url       = {http://doi.acm.org/10.1145/1291151.1291163},
  doi       = {10.1145/1291151.1291163},
  timestamp = {Tue, 06 Nov 2007 12:48:33 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/icfp/Elliott07},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{DBLP:conf/ml/Balat06,
  author    = {Vincent Balat},
  title     = {Ocsigen: typing web interaction with objective Caml},
  booktitle = {Proceedings of the {ACM} Workshop on ML, 2006, Portland, Oregon, USA,
               September 16, 2006},
  pages     = {84--94},
  year      = {2006},
  crossref  = {DBLP:conf/ml/2006},
  url       = {http://doi.acm.org/10.1145/1159876.1159889},
  doi       = {10.1145/1159876.1159889},
  timestamp = {Tue, 06 Nov 2007 12:58:44 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/ml/Balat06},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@book{pfpl,
	Author = {Harper, Robert},
	Title = {{Practical Foundations for Programming Languages}},
	Edition={2nd},
  Publisher = {Cambridge University Press},
	_note={(Working Draft, Retrieved Nov. 19, 2015)},
	Year={2016},
	Url={https://www.cs.cmu.edu/~rwh/plbook/2nded.pdf}
}

@misc{bidi-tutorial,
  author = {David Raymond Christiansen},
  Howpublished = {\url{http://davidchristiansen.dk/tutorials/bidirectional.pdf}},
  Title = {{Bidirectional Typing Rules: A Tutorial}},
  Year = {2013}
}

@article{mens2004survey,
  title={A survey of software refactoring},
  author={Mens, Tom and Tourw{\'e}, Tom},
  journal={IEEE Transactions on software engineering},
  volume={30},
  number={2},
  pages={126--139},
  year={2004},
  publisher={IEEE}
}

@book{mthm97-for-dart,
	Author = {Robin Milner and Mads Tofte and Robert Harper and David MacQueen},
	Date-Added = {2014-12-02 22:41:48 +0000},
	Date-Modified = {2014-12-02 22:41:48 +0000},
	Id = {Bog},
	Publisher = {The MIT Press},
	Puf = {Bog},
	Semno = {D-346},
	Title = {The {Definition} of {Standard ML} (Revised)},
	Year = {1997}}

@inproceedings{Harper00atype-theoretic,
	Author = {Robert Harper and Christopher Stone},
	Booktitle = {Proof, Language and Interaction: Essays in Honour of Robin Milner},
	Date-Added = {2014-02-17 07:03:39 +0000},
	Date-Modified = {2014-04-14 03:31:01 +0000},
	Publisher = {MIT Press},
	Title = {{A Type-Theoretic Interpretation of Standard ML}},
	Year = {2000}}

@article{green1996usability,
  title={Usability analysis of visual programming environments: a ‘cognitive dimensions’ framework},
  author={Green, Thomas R. G. and Petre, Marian},
  journal={Journal of Visual Languages \& Computing},
  volume={7},
  number={2},
  pages={131--174},
  year={1996},
  publisher={Elsevier}
}


@inproceedings{Altadmri:2015:MCI:2676723.2677258,
 author = {Altadmri, Amjad and Brown, Neil C.C.},
 title = {37 Million Compilations: Investigating Novice Programming Mistakes in Large-Scale Student Data},
 booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
 series = {SIGCSE '15},
 year = {2015},
 isbn = {978-1-4503-2966-8},
 location = {Kansas City, Missouri, USA},
 pages = {522--527},
 numpages = {6},
 url = {http://doi.acm.org/10.1145/2676723.2677258},
 doi = {10.1145/2676723.2677258},
 acmid = {2677258},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {blackbox, programming mistakes},
} 


@inproceedings{Mooty:2010:CCC:1915084.1916348,
 author = {Mooty, Mathew and Faulring, Andrew and Stylos, Jeffrey and Myers, Brad A.},
 title = {Calcite: Completing Code Completion for Constructors Using Crowds},
 booktitle = {Proceedings of the 2010 IEEE Symposium on Visual Languages and Human-Centric Computing},
 series = {VLHCC '10},
 year = {2010},
 isbn = {978-0-7695-4206-5},
 pages = {15--22},
 numpages = {8},
 url = {http://dx.doi.org/10.1109/VLHCC.2010.12},
 doi = {10.1109/VLHCC.2010.12},
 acmid = {1916348},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 keywords = {Eclipse, API Documentation, Natural Programming, Crowdsourcing},
} 


@inproceedings{sarkar2015impact,
  title={The impact of syntax colouring on program comprehension},
  author={Sarkar, Advait},
  booktitle={Proceedings of the 26th Annual Conference of the Psychology of Programming Interest Group (PPIG 2015)},
  pages={49--58},
  year={2015}
}


@INPROCEEDINGS{6883030, 
author={Y. S. Yoon and B. A. Myers}, 
booktitle={2014 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
title={A longitudinal study of programmers' backtracking}, 
year={2014}, 
pages={101-108}, 
keywords={backtracking;interactive programming;software tools;source code (software);IDE;abstract syntax tree node;backtracking instances;backtracking rate;backtracking tools;design implications;fine-grained code editing logs;interactive development environments;longitudinal study;programmer backtracking;programming;source code;undo command;Detectors;Educational institutions;Encoding;Face;History;Java;Programming;backtracking;empirical study;interactive development environments (IDE);undo}, 
doi={10.1109/VLHCC.2014.6883030}, 
ISSN={1943-6092}, 
month={July},}

@article{DBLP:journals/jacm/DaviesP01,
  author    = {Rowan Davies and
               Frank Pfenning},
  title     = {A modal analysis of staged computation},
  journal   = {J. {ACM}},
  volume    = {48},
  number    = {3},
  pages     = {555--604},
  year      = {2001},
  url       = {http://doi.acm.org/10.1145/382780.382785},
  doi       = {10.1145/382780.382785},
  timestamp = {Thu, 20 Nov 2003 12:28:07 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/jacm/DaviesP01},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{DBLP:conf/tldi/ChlipalaPH05,
  author    = {Adam Chlipala and
               Leaf Petersen and
               Robert Harper},
  title     = {Strict bidirectional type checking},
  booktitle = {Proceedings of TLDI'05: 2005 {ACM} {SIGPLAN} International Workshop
               on Types in Languages Design and Implementation, Long Beach, CA, USA,
               January 10, 2005},
  pages     = {71--78},
  year      = {2005},
  @Comment crossref  = {DBLP:conf/tldi/2005},
  url       = {http://doi.acm.org/10.1145/1040294.1040301},
  doi       = {10.1145/1040294.1040301},
  timestamp = {Tue, 22 May 2012 15:24:55 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/tldi/ChlipalaPH05},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{Wan:2000:FRP:349299.349331,
 author = {Wan, Zhanyong and Hudak, Paul},
 title = {Functional Reactive Programming from First Principles},
 booktitle = {Proceedings of the ACM SIGPLAN 2000 Conference on Programming Language Design and Implementation},
 series = {PLDI '00},
 year = {2000},
 isbn = {1-58113-199-2},
 location = {Vancouver, British Columbia, Canada},
 pages = {242--252},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/349299.349331},
 doi = {10.1145/349299.349331},
 acmid = {349331},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{TSLs,
	Author = {Omar, Cyrus and Kurilova, Darya and Nistor, Ligia and Chung, Benjamin and Potanin, Alex and Aldrich, Jonathan},
	Booktitle = {ECOOP '14},
	Date-Added = {2014-06-04 08:09:38 +0000},
	Date-Modified = {2014-06-04 08:11:37 +0000},
	Title = {Safely Composable Type-Specific Languages},
	Year = {2014},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2509136.2509515},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/2509136.2509515}}


@article{Pierce:2000:LTI:345099.345100,
	Acmid = {345100},
	Address = {New York, NY, USA},
	Author = {Pierce, Benjamin C. and Turner, David N.},
	Date-Added = {2014-05-24 20:19:28 +0000},
	Date-Modified = {2014-05-24 20:19:28 +0000},
	Doi = {10.1145/345099.345100},
	Issn = {0164-0925},
	Issue_Date = {Jan. 2000},
	Journal = {ACM Trans. Program. Lang. Syst.},
	Keywords = {polymorphism, subtyping, type inference},
	Month = jan,
	Number = {1},
	Numpages = {44},
	Pages = {1--44},
	Publisher = {ACM},
	Title = {Local Type Inference},
	Url = {http://doi.acm.org/10.1145/345099.345100},
	Volume = {22},
	Year = {2000}
}

@InProceedings{Siek06a,
  author =	"Jeremy G. Siek and Walid Taha",
  booktitle =	"Proceedings, Scheme and Functional Programming
		 Workshop 2006",
  pages =	"81--92",
  publisher =	"University of Chicago TR-2006-06",
  title =	"Gradual Typing for Functional Languages",
  URL =  	"http://scheme2006.cs.uchicago.edu/13-siek.pdf",
  year = 	"2006",
}

@Article{JFP::Huet1997,
  title =	"The {Zipper}",
  author =	"G{\'e}rard Huet",
  pages =	"549--554",
  journal =	"Journal of Functional Programming",
  month =	sep,
  year = 	"1997",
  volume =	"7",
  number =	"5",
  note = 	"Functional Pearl",
}


@phdthesis{norell:thesis,
  author  = {Ulf Norell},
  title	  = {Towards a practical programming language based on dependent type
	     theory},
  school  = {Department of Computer Science and Engineering, Chalmers University of Technology},
  year	  = 2007,
  month	  = {September},
  address = {SE-412 96 G\"{o}teborg, Sweden}
}


@inproceedings{buckland_open_2015,
	location = {New York, {NY}, {USA}},
	title = {Open Access to Working Notes in the Humanities},
	isbn = {978-1-4503-3666-6},
	url = {http://doi.acm.org/10.1145/2788993.2789852},
	doi = {10.1145/2788993.2789852},
	series = {{OpenSym} '15},
	abstract = {A web-based tool for making and sharing research designed for authors, curators, and editors in the humanities is described, {\textless}u{\textgreater}editorsnotes.org{\textless}/u{\textgreater}. Notes are a varied genre not limited to annotations. The data for the tool is modeled as three kinds of records: Notes created; Documents cited; and Topics, headings for names and subjects. Structured records are needed for interoperability and sharing. Open access, sustainability issues, and how working notes can complement other infrastructure are discussed in a status report.},
	pages = {11:1--11:4},
	booktitle = {Proceedings of the 11th International Symposium on Open Collaboration},
	publisher = {{ACM}},
	author = {Buckland, Michael K. and Golden, Patrick and Shaw, Ryan B.},
	urldate = {2015-12-11},
	date = {2015},
	keywords = {documentary editions, editors, historians, working notes},
	file = {ACM Full Text PDF:/Users/michaelhilton/Library/Application Support/Zotero/Profiles/f67bsoxk.default/zotero/storage/XKAHK32G/Buckland et al. - 2015 - Open Access to Working Notes in the Humanities.pdf:application/pdf}
}

@inproceedings{garlan_gnome:_1984,
	location = {New York, {NY}, {USA}},
	title = {{GNOME}: An Introductory Programming Environment Based on a Family of Structure Editors},
	isbn = {0-89791-131-8},
	url = {http://doi.acm.org/10.1145/800020.808250},
	doi = {10.1145/800020.808250},
	series = {{SDE} 1},
	shorttitle = {{GNOME}},
	abstract = {Structure editors have frequently been used as powerful and unifying interfaces for programming environments in computer science research settings. Few, however, have found their way into common use. {GNOME} is an attempt to channel the experience gained in the use of structure editing for software development environment research of the Gandalf Project into a practical novice programming environment. Based on a family of structure editors, it is currently being used to teach programming to undergraduates at Carnegie-Mellon University. This paper describes the {GNOME} environment, recounts lessons learned in adapting structure editors to novice programmers, and discusses its effectiveness as a teaching environment.},
	pages = {65--72},
	booktitle = {Proceedings of the First {ACM} {SIGSOFT}/{SIGPLAN} Software Engineering Symposium on Practical Software Development Environments},
	publisher = {{ACM}},
	author = {Garlan, David B. and Miller, Philip L.},
	urldate = {2015-12-11},
	date = {1984},
	year = {1984},
	file = {ACM Full Text PDF:/Users/michaelhilton/Library/Application Support/Zotero/Profiles/f67bsoxk.default/zotero/storage/3F93F35M/Garlan and Miller - 1984 - GNOME An Introductory Programming Environment Bas.pdf:application/pdf}
}

@inproceedings{ko_barista:_2006,
	location = {New York, {NY}, {USA}},
	title = {Barista: An Implementation Framework for Enabling New Tools, Interaction Techniques and Views in Code Editors},
	isbn = {1-59593-372-7},
	url = {http://doi.acm.org/10.1145/1124772.1124831},
	doi = {10.1145/1124772.1124831},
	series = {{CHI} '06},
	shorttitle = {Barista},
	abstract = {Recent advances in programming environments have focused on improving programmer productivity by utilizing the inherent structure in computer programs. However, because these environments represent code as plain text, it is difficult and sometimes impossible to embed interactive tools, annotations, and alternative views in the code itself. Barista is an implementation framework that enables the creation of such user interfaces by simplifying the implementation of editors that represent code internally as an abstract syntax tree and maintain a corresponding, fully structured visual representation on-screen. Barista also provides designers of editors with a standard text-editing interaction technique that closely mimics that of conventional text editors, overcoming a central usability issue of previous structured code editors.},
	pages = {387--396},
	booktitle = {Proceedings of the {SIGCHI} Conference on Human Factors in Computing Systems},
	publisher = {{ACM}},
	author = {Ko, Andrew J. and Myers, Brad A.},
	urldate = {2015-12-11},
	date = {2006},
	year = {2006},
	keywords = {end-user software engineering, programming environments, structured editors},
	file = {ACM Full Text PDF:/Users/michaelhilton/Library/Application Support/Zotero/Profiles/f67bsoxk.default/zotero/storage/UNAR5UQC/Ko and Myers - 2006 - Barista An Implementation Framework for Enabling .pdf:application/pdf}
}

@inproceedings{oney_codelets:_2012,
	location = {New York, {NY}, {USA}},
	title = {Codelets: Linking Interactive Documentation and Example Code in the Editor},
	isbn = {978-1-4503-1015-4},
	url = {http://doi.acm.org/10.1145/2207676.2208664},
	doi = {10.1145/2207676.2208664},
	series = {{CHI} '12},
	shorttitle = {Codelets},
	abstract = {Programmers frequently use instructive code examples found on the Web to overcome cognitive barriers while programming. These examples couple the concrete functionality of code with rich contextual information about how the code works. However, using these examples necessitates understanding, configuring, and integrating the code, all of which typically take place after the example enters the user's code and has been removed from its original instructive context. In short, a user's interaction with an example continues well after the code is pasted. This paper investigates whether treating examples as "first-class" objects in the code editor - rather than simply as strings of text - will allow programmers to use examples more effectively. We explore this through the creation and evaluation of Codelets. A Codelet is presented inline with the user's code, and consists of a block of example code and an interactive helper widget that assists the user in understanding and integrating the example. The Codelet persists throughout the example's lifecycle, remaining accessible even after configuration and integration is done. A comparative laboratory study with 20 participants found that programmers were able to complete tasks involving examples an average of 43\% faster when using Codelets than when using a standard Web browser.},
	pages = {2697--2706},
	booktitle = {Proceedings of the {SIGCHI} Conference on Human Factors in Computing Systems},
	publisher = {{ACM}},
	author = {Oney, Stephen and Brandt, Joel},
	urldate = {2015-12-11},
	date = {2012},
	year = {2012},
	keywords = {Documentation, example, Programming, structured editing},
	file = {ACM Full Text PDF:/Users/michaelhilton/Library/Application Support/Zotero/Profiles/f67bsoxk.default/zotero/storage/3FAU6US9/Oney and Brandt - 2012 - Codelets Linking Interactive Documentation and Ex.pdf:application/pdf}
}

@inproceedings{mendes_structure_2014,
	location = {New York, {NY}, {USA}},
	title = {Structure Editing of Handwritten Mathematics: Improving the Computer Support for the Calculational Method},
	isbn = {978-1-4503-2587-5},
	url = {http://doi.acm.org/10.1145/2669485.2669495},
	doi = {10.1145/2669485.2669495},
	series = {{ITS} '14},
	shorttitle = {Structure Editing of Handwritten Mathematics},
	abstract = {We present a structure editor that aims to facilitate the presentation and manipulation of handwritten mathematical expressions. The editor is oriented to the calculational mathematics involved in algorithmic problem solving and it provides features that allow reliable structure manipulation of mathematical formulae, as well as flexible and interactive presentations. We describe some of its most important features, including the use of gestures to manipulate algebraic formulae, the structured selection of expressions, definition and redefinition of operators in runtime, gesture's editor, and handwritten templates. The editor is made available in the form of a C\# class library which can be easily used to extend existing tools. For example, we have extended Classroom Presenter, a tool for ink-based teaching presentations and classroom interaction. We have tested and evaluated the editor with target users. The results obtained seem to indicate that the software is usable, suitable for its purpose and a valuable contribution to teaching and learning algorithmic problem solving.},
	pages = {139--148},
	booktitle = {Proceedings of the Ninth {ACM} International Conference on Interactive Tabletops and Surfaces},
	publisher = {{ACM}},
	author = {Mendes, Alexandra and Backhouse, Roland and Ferreira, Joao F.},
	urldate = {2015-12-11},
	date = {2014},
	keywords = {calculational method, c\# class library, computer science education, Gestures, handwritten mathematics, mathematics education, structure editor, tablet pcs},
	file = {ACM Full Text PDF:/Users/michaelhilton/Library/Application Support/Zotero/Profiles/f67bsoxk.default/zotero/storage/RQKVBK5E/Mendes et al. - 2014 - Structure Editing of Handwritten Mathematics Impr.pdf:application/pdf}
}

@inproceedings{voelter_mbeddr:_2012,
	location = {New York, {NY}, {USA}},
	title = {Mbeddr: An Extensible C-based Programming Language and {IDE} for Embedded Systems},
	isbn = {978-1-4503-1563-0},
	url = {http://doi.acm.org/10.1145/2384716.2384767},
	doi = {10.1145/2384716.2384767},
	series = {{SPLASH} '12},
	shorttitle = {Mbeddr},
	abstract = {While the C programming language provides good support for writing efficient, low-level code, it is not adequate for defining higher-level abstractions relevant to embedded software. In this paper we present the mbeddr technology stack that supports extension of C with constructs adequate for embedded systems. In mbeddr, efficient low-level programs can be written using the well-known concepts from C. Higher-level domain-specific abstractions can be seamlessly integrated into C by means of modular language extension regarding syntax, type system, semantics and {IDE}. In the paper we show how language extension can address the challenges of embedded software development and report on our experience in building these extensions. We show that language workbenches deliver on the promise of significantly reducing the effort of language engineering and the construction of corresponding {IDEs}. mbeddr is built on top of the {JetBrains} {MPS} language workbench. Both {MPS} and mbeddr are open source software.},
	pages = {121--140},
	booktitle = {Proceedings of the 3rd Annual Conference on Systems, Programming, and Applications: Software for Humanity},
	publisher = {{ACM}},
	author = {Voelter, Markus and Ratiu, Daniel and Schaetz, Bernhard and Kolb, Bernd},
	urldate = {2015-12-11},
	date = {2012},
	year = {2012},
	keywords = {development environments, dsls, embedded software, formal methods, language extension},
	file = {ACM Full Text PDF:/Users/michaelhilton/Library/Application Support/Zotero/Profiles/f67bsoxk.default/zotero/storage/F7MAMK5T/Voelter et al. - 2012 - Mbeddr An Extensible C-based Programming Language.pdf:application/pdf}
}

@article{teitelbaum_cornell_1981,
	title = {The Cornell Program Synthesizer: A Syntax-directed Programming Environment},
	volume = {24},
	issn = {0001-0782},
	url = {http://doi.acm.org/10.1145/358746.358755},
	doi = {10.1145/358746.358755},
	shorttitle = {The Cornell Program Synthesizer},
	abstract = {Programs are not text; they are hierarchical compositions of computational structures and should be edited, executed, and debugged in an environment that consistently acknowledges and reinforces this viewpoint. The Cornell Program Synthesizer demands a structural perspective at all stages of program development. Its separate features are unified by a common foundation: a grammar for the programming language. Its full-screen derivation-tree editor and syntax-directed diagnostic interpreter combine to make the Synthesizer a powerful and responsive interactive programming tool.},
	pages = {563--573},
	number = {9},
	journaltitle = {Commun. {ACM}},
	author = {Teitelbaum, Tim and Reps, Thomas},
	urldate = {2015-12-11},
	date = {1981-09},
	year = {1981},
	journal = {Commun. {ACM}},
	keywords = {diagnostic interpreter, program development system, programming environment, source language debugger, syntax-directed editor, template},
	file = {ACM Full Text PDF:/Users/michaelhilton/Library/Application Support/Zotero/Profiles/f67bsoxk.default/zotero/storage/E7E68F7N/Teitelbaum and Reps - 1981 - The Cornell Program Synthesizer A Syntax-directed.pdf:application/pdf}
}

@inproceedings{tillmann_touchdevelop:_2011,
	location = {New York, {NY}, {USA}},
	title = {{TouchDevelop}: Programming Cloud-connected Mobile Devices via Touchscreen},
	isbn = {978-1-4503-0941-7},
	url = {http://doi.acm.org/10.1145/2048237.2048245},
	doi = {10.1145/2048237.2048245},
	series = {Onward! 2011},
	shorttitle = {{TouchDevelop}},
	abstract = {The world is experiencing a technology shift. In 2011, more touchscreen-based mobile devices like smartphones and tablets will be sold than desktops, laptops, and netbooks combined. In fact, in many cases incredibly powerful and easy-to-use smart phones are going to be the first and, in less developed countries, possibly the only computing devices which virtually all people will own, and carry with them at all times. Furthermore, mobile devices do not only have touchscreens, but they are also equipped with a multitude of sensors, such as location information and acceleration, and they are always connected to the cloud. {TouchDevelop} is a novel application creation environment for anyone to script their smartphones anywhere -- you do not need a separate {PC}. {TouchDevelop} allows you to develop mobile device applications that can access your data, your media, your sensors and allows using cloud services including storage, computing, and social networks. {TouchDevelop} targets students, and hobbyists, not necessarily the professional developer. Typical {TouchDevelop} applications are written for fun, or for personalizing the phone. {TouchDevelop}'s typed, structured programming language is built around the idea of only using a touchscreen as the input device to author code. It has built-in primitives which make it easy to access the rich sensor data available on a mobile device. In our vision, the state of the program is automatically distributed between mobile clients and the cloud, with automatic synchronization of data and execution between clients and cloud, liberating the programmer from worrying (or even having to know about) the details. We report on our experience with our first prototype implementation for the Windows Phone 7 platform, which already realizes a large portion of our vision. It is available on the Windows Phone Marketplace.},
	pages = {49--60},
	booktitle = {Proceedings of the 10th {SIGPLAN} Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software},
	publisher = {{ACM}},
	author = {Tillmann, Nikolai and Moskal, Michal and de Halleux, Jonathan and Fahndrich, Manuel},
	urldate = {2015-12-11},
	date = {2011},
	year = {2011},
	keywords = {cloud, mobile devices, touchscreen, type inference},
	file = {ACM Full Text PDF:/Users/michaelhilton/Library/Application Support/Zotero/Profiles/f67bsoxk.default/zotero/storage/MWXSXG6A/Tillmann et al. - 2011 - TouchDevelop Programming Cloud-connected Mobile D.pdf:application/pdf}
}

@article{Resnick:2009:SP:1592761.1592779,
 author = {Resnick, Mitchel and Maloney, John and Monroy-Hern\'{a}ndez, Andr{\'e}s and Rusk, Natalie and Eastmond, Evelyn and Brennan, Karen and Millner, Amon and Rosenbaum, Eric and Silver, Jay and Silverman, Brian and Kafai, Yasmin},
 title = {Scratch: Programming for All},
 journal = {Commun. ACM},
 issue_date = {November 2009},
 volume = {52},
 number = {11},
 month = nov,
 year = {2009},
 issn = {0001-0782},
 pages = {60--67},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/1592761.1592779},
 doi = {10.1145/1592761.1592779},
 acmid = {1592779},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{Conway:2000:ALL:332040.332481,
 author = {Conway, Matthew and Audia, Steve and Burnette, Tommy and Cosgrove, Dennis and Christiansen, Kevin},
 title = {Alice: Lessons Learned from Building a 3D System for Novices},
 booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
 series = {CHI '00},
 year = {2000},
 isbn = {1-58113-216-6},
 location = {The Hague, The Netherlands},
 pages = {486--493},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/332040.332481},
 doi = {10.1145/332040.332481},
 acmid = {332481},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {animation authoring tools, interactive 3D graphics},
}

@inproceedings{Omar:2012:ACC:2337223.2337324,
 author = {Omar, Cyrus and Yoon, YoungSeok and LaToza, Thomas D. and Myers, Brad A.},
 title = {Active Code Completion},
 booktitle = {Proceedings of the 34th International Conference on Software Engineering},
 series = {ICSE '12},
 year = {2012},
 isbn = {978-1-4673-1067-3},
 location = {Zurich, Switzerland},
 pages = {859--869},
 numpages = {11},
 url = {http://dl.acm.org/citation.cfm?id=2337223.2337324},
 acmid = {2337324},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
}

@article{Reps:1984:SG:390010.808247,
 author = {Reps, Thomas and Teitelbaum, Tim},
 title = {The Synthesizer Generator},
 journal = {SIGSOFT Softw. Eng. Notes},
 issue_date = {May 1984},
 volume = {9},
 number = {3},
 month = apr,
 year = {1984},
 issn = {0163-5948},
 pages = {42--48},
 numpages = {7},
 url = {http://doi.acm.org/10.1145/390010.808247},
 doi = {10.1145/390010.808247},
 acmid = {808247},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{Borras:1988:CS:64140.65005,
 author = {Borras, P. and Clement, D. and Despeyroux, Th. and Incerpi, J. and Kahn, G. and Lang, B. and Pascual, V.},
 title = {Centaur: The System},
 journal = {SIGPLAN Not.},
 issue_date = {Feb. 1989},
 volume = {24},
 number = {2},
 month = nov,
 year = {1988},
 issn = {0362-1340},
 pages = {14--24},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/64140.65005},
 doi = {10.1145/64140.65005},
 acmid = {65005},
 publisher = {ACM},
 address = {New York, NY, USA},
}


@misc{lamdu,
  title = {Project Lamdu},
  author = {Lotem, Eyal and Chuchem, Yair},
  howpublished = {\url{http://www.lamdu.org/}},
  note = {Accessed: 2016-04-08}
}


@misc{unison,
  title = {Unison},
  author = {Chiusano, Paul},
  howpublished = {\url{http://www.unisonweb.org/}},
  note = {Accessed: 2016-04-25}
}

@TechReport{Simmons11tr,
  author = 	 {Robert J. Simmons and Frank Pfenning},
  title = 	 {Weak Focusing for Ordered Linear Logic},
  institution =  {Carnegie Mellon University},
  year = 	 2011,
  number = 	 {CMU-CS-10-147},
  note = 	 {Revision of April 2011},
  urlpdf =       {http://www.cs.cmu.edu/~fp/papers/CMU-CS-10-147.pdf}
}

@inproceedings{urban,
  author = {Urban, Christian and Berghofer, Stefan and Norrish, Michael},
  title = {Barendregt's Variable Convention in Rule Inductions},
  booktitle = {Proceedings of the 21th Conference on Automated Deduction},
  series = {CADE '07},
  year = {2007},
  location = {Bremen, Germany},
  pages = {35--50},
  numpages = {16},
  url = {http://link.springer.com/chapter/10.1007\%2F978-3-540-73595-3_4},
  publisher = {Springer Verlag},
  address = {New York, NY, USA},
}

@inproceedings{lh09unibind,
  author = 	 {Daniel R. Licata and Robert Harper},
  title = 	 {A Universe of Binding and Computation},
  booktitle =    "{ACM} {SIGPLAN} {I}nternational {C}onference on {F}unctional {P}rogramming",
  year = 	 {2009},
}

@inproceedings{Pouillard11,
  author    = {Nicolas Pouillard},
  title     = {Nameless, painless},
  booktitle = {Proceeding of the 16th {ACM} {SIGPLAN} international conference on
               Functional Programming, {ICFP} 2011, Tokyo, Japan, September 19-21,
               2011},
  pages     = {320--332},
  year      = {2011},
  url       = {http://doi.acm.org/10.1145/2034773.2034817},
  doi       = {10.1145/2034773.2034817},
  timestamp = {Thu, 22 Sep 2011 12:28:20 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/icfp/Pouillard11},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}
